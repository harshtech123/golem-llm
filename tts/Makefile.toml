[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.build]
run_task = { name = [
    "build-aws",
    "build-deepgram",
    "build-elevenlabs",
    "build-google",
] }

[tasks.build-portable]
run_task = { name = [
    "build-aws-portable",
    "build-deepgram-portable",
    "build-elevenlabs-portable",
    "build-google-portable",
] }

[tasks.release-build]
run_task = { name = [
    "release-build-aws",
    "release-build-deepgram",
    "release-build-elevenlabs",
    "release-build-google",
] }

[tasks.release-build-portable]
run_task = { name = [
    "release-build-aws-portable",
    "release-build-deepgram-portable",
    "release-build-elevenlabs-portable",
    "release-build-google-portable",
] }

[tasks.build-aws]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-aws"]


[tasks.build-aws-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-aws", "--no-default-features"]


[tasks.build-deepgram]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-deepgram"]

[tasks.build-deepgram-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-deepgram", "--no-default-features"]

[tasks.build-elevenlabs]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-elevenlabs"]

[tasks.build-elevenlabs-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-elevenlabs", "--no-default-features"]

[tasks.build-google]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-google"]

[tasks.build-google-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-google", "--no-default-features"]

[tasks.release-build-aws]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-aws", "--release"]

[tasks.release-build-aws-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-aws", "--release", "--no-default-features"]


[tasks.release-build-deepgram]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-deepgram", "--release"]

[tasks.release-build-deepgram-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = [
    "build",
    "-p",
    "golem-tts-deepgram",
    "--release",
    "--no-default-features",
]

[tasks.release-build-elevenlabs]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-elevenlabs", "--release"]

[tasks.release-build-elevenlabs-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-elevenlabs", "--release", "--no-default-features"]

[tasks.release-build-google]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-google", "--release"]

[tasks.release-build-google-portable]
install_crate = { crate_name = "cargo-component", version = "0.21.1" }
command = "cargo-component"
args = ["build", "-p", "golem-tts-google", "--release", "--no-default-features"]

[tasks.wit-update]
install_crate = { crate_name = "wit-deps-cli" }
command = "wit-deps"
args = ["update"]

[tasks.wit]
dependencies = ["wit-update"]

script_runner = "@duckscript"
script = """
modules = array tts aws deepgram elevenlabs google

for module in ${modules}
    rm -r ${module}/wit/deps
    mkdir ${module}/wit/deps/golem-tts
    cp wit/golem-tts.wit ${module}/wit/deps/golem-tts/golem-tts.wit
    cp wit/deps/wasi:io ${module}/wit/deps

    echo "Copied WIT for module tts::${module}"
end

# Copy WIT files for integration tests
rm -r ../test/tts/wit
mkdir ../test/tts/wit/deps/golem-tts
mkdir ../test/tts/wit/deps/io
cp wit/golem-tts.wit ../test/tts/wit/deps/golem-tts/golem-tts.wit
cp wit/deps/wasi:io/error.wit ../test/tts/wit/deps/io/error.wit
cp wit/deps/wasi:io/poll.wit ../test/tts/wit/deps/io/poll.wit
cp wit/deps/wasi:io/streams.wit ../test/tts/wit/deps/io/streams.wit
cp wit/deps/wasi:io/world.wit ../test/tts/wit/deps/io/world.wit

echo "Copied WIT for module test"
"""

[tasks.build-test-components]
dependencies = ["build"]
description = "Builds tts test components with golem-cli"
script = '''
cd ../test/tts

golem-cli --version
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b aws-debug
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b deepgram-debug
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b elevenlabs-debug
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b google-debug
'''

[tasks.release-build-test-components]
dependencies = ["release-build"]
description = "Builds tts test components with golem-cli"
script = '''
cd ../test/tts

golem-cli --version
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b aws-release
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b deepgram-release
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b elevenlabs-release
golem-cli --dev-mode app clean
golem-cli --dev-mode app build -b google-release
'''
